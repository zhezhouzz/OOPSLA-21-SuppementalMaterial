program:

let tail =
  match r with
  | ListNil , _ -> raise Empty
  | ListCons (_, f), r ->
    if ListIsEmpty f then List.rev r, f else f, r

F:
ListIsEmpty,ListCons,ListRev,ListNil

P:
list_member,list_head

assertion:
fun int list:l1,int list:l2,int list:l3,int list:l4 -> forall int:u,((list_member(l3,u) || list_head(l1,u) || list_member(l4,u)) <==> 
 (list_member(l1,u) || list_member(l2,u)))

result:
ListCons(int:i_0,int list:il_0,int list:il_1):=
forall int:u_0 int:u_1,(
 (ite list_member(il_1,u_0)
     (list_member(il_0,u_0) || list_head(il_1,u_0))
     (
      !(u_0==i_0) &&
      (
       !list_head(il_1,u_0) &&
       !list_member(il_0,u_0)
      )
     )) ||
 (
  !(u_1==u_0) ||
  (ite list_member(il_0,u_0)
      (
       list_member(il_1,u_0) ||
       (ite list_head(il_0,u_0)
           (
            (u_0==i_0) &&
            !(i_0==i_0)
           )
           (ite list_head(il_1,u_0)
               (
                (u_0==i_0) &&
                !(i_0==i_0)
               )
               (
                (u_0==i_0) &&
                !(i_0==i_0)
               )))
      )
      (ite list_member(il_1,u_0)
          (
           list_head(il_1,u_0) ||
           (
            (u_0==i_0) &&
            !(i_0==i_0)
           )
          )
          (
           !list_head(il_1,u_0) ||
           (
            (u_0==i_0) &&
            !(i_0==i_0)
           )
          )))
 )
)
ListIsEmpty(int list:il_0,bool:b_0):=
forall int:u_0 int:u_1,(
 (ite b_0
     (
      !list_member(il_0,u_0) &&
      !list_head(il_0,u_0)
     )
     (
      list_member(il_0,u_0) ||
      !list_head(il_0,u_0)
     )) ||
true
)
ListNil(int list:il_0):=
forall int:u_0,true
ListRev(int list:il_0,int list:il_1):=
forall int:u_0 int:u_1,(
 (ite list_member(il_0,u_0)
     list_member(il_1,u_0)
     (
      !list_member(il_1,u_0) &&
      !list_head(il_0,u_0)
     )) ||
 (
  !(u_1==u_0) ||
  (ite list_head(il_0,u_0)
      (ite list_member(il_1,u_0)
          list_member(il_0,u_0)
          !list_member(il_0,u_0))
      (ite list_member(il_0,u_0)
          list_member(il_1,u_0)
          !list_member(il_1,u_0)))
 )
)
